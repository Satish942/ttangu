WEBVTT

1
00:00:01.760 --> 00:00:07.250
In this video we’re going to make our books-list
component the main page of our application.

2
00:00:07.250 --> 00:00:10.330
Then we’ll add in some new data in order
to demonstrate data-binding.

3
00:00:10.330 --> 00:00:16.530
So right now, our main page is blank, its
just displaying our navbar – we’ll change

4
00:00:16.530 --> 00:00:20.200
that by adding our books-list details below.

5
00:00:20.200 --> 00:00:26.530
Lets start off by opening our books-list typescript
file inside of the books folder and create

6
00:00:26.530 --> 00:00:27.640
a new component.

7
00:00:27.640 --> 00:00:33.340
We’ll begin by exporting a class named BooksListComponent.

8
00:00:33.340 --> 00:00:35.719
Then we’ll add our component decorator.

9
00:00:35.719 --> 00:00:42.569
It will have a selector since we’ll be using
this as a directive and the name will be bs-books-list.

10
00:00:42.569 --> 00:00:47.680
Next, we’ll add in our templateUrl.

11
00:00:47.680 --> 00:00:53.420
Which is going to be our file books-list.component.html.

12
00:00:53.420 --> 00:01:00.219
And since we’re referencing another file
we need to also set our moduleId as module.id.

13
00:01:00.219 --> 00:01:06.940
Next, we’ll import Component from angular
core.

14
00:01:06.940 --> 00:01:12.580
With our component setup, all we have to do
now is add it to our appModule file.

15
00:01:12.580 --> 00:01:19.650
So we’ll open our app.module.ts file and
include our component inside our declarations.

16
00:01:19.650 --> 00:01:26.260
And then we just need to add it to our list
of imports.

17
00:01:26.260 --> 00:01:33.310
Now I’m able to use my books-list component
as a directive inside of my AppComponent.

18
00:01:33.310 --> 00:01:42.810
So what I can do is just open up my app.component.html
file and then add in my books-list selector

19
00:01:42.810 --> 00:01:45.870
to the bottom like this.

20
00:01:45.870 --> 00:01:52.990
Now I can save these files and go back into
my application.

21
00:01:52.990 --> 00:01:58.409
And now you should see our books list component
appearing right below our navigation menu.

22
00:01:58.409 --> 00:01:59.550
Ok, great.

23
00:01:59.550 --> 00:02:05.980
We’ve added our books list to the main page
but we haven’t done any kind of data binding.

24
00:02:05.980 --> 00:02:10.229
To start with lets open up our books-list
html file.

25
00:02:10.229 --> 00:02:13.599
Here you can see we’ve hard-coded in 6 books.

26
00:02:13.599 --> 00:02:20.129
I’m going to add one more of these books
to the top in order to show you data binding.

27
00:02:20.129 --> 00:02:28.110
I’ll just copy from and paste from column-md-4
are.

28
00:02:28.110 --> 00:02:31.810
Lets now create some new data to work with
in our component.

29
00:02:31.810 --> 00:02:39.440
We’ll start off by defining an imageWidth
which is a number and set it to 100.

30
00:02:39.440 --> 00:02:42.629
This will be what we used for our property
binding.

31
00:02:42.629 --> 00:02:45.870
Now lets add in a few book specific properties.

32
00:02:45.870 --> 00:02:53.799
We’ll start out with a bookAuthor is of
type string and equal to Tom Jones.

33
00:02:53.799 --> 00:03:01.410
Then bookTitle of type string is War and Peace
2.

34
00:03:01.410 --> 00:03:05.189
bookPrice also of type string is going to
be set to 29.95.

35
00:03:05.189 --> 00:03:14.830
And bookDescription of type string is book
of historical fiction.

36
00:03:14.830 --> 00:03:18.400
bookReviews of type number is 15.

37
00:03:18.400 --> 00:03:27.840
And finally bookImgUrl is of type string and
is set to the location of my image in relation

38
00:03:27.840 --> 00:03:37.930
to my index.html file.Now lets go in and add
our properties inside of our template.

39
00:03:37.930 --> 00:03:43.239
To do so we just need to change our hardcoded
text here to display our properties we just

40
00:03:43.239 --> 00:03:44.239
defined.

41
00:03:44.239 --> 00:03:47.340
We’ll do this using interpolation.

42
00:03:47.340 --> 00:04:01.689
First we’ll set our price, then the title,
then our author, and then our reviews.

43
00:04:01.689 --> 00:04:09.769
We’ll finish off our 1-way binding example
now by testing out property binding.

44
00:04:09.769 --> 00:04:16.370
And to do this we’ll just add brackets around
our image source and then set it equal to

45
00:04:16.370 --> 00:04:17.940
our bookImageUrl.

46
00:04:17.940 --> 00:04:25.780
And we’ll also use property binding to specify
the width of this particular image.

47
00:04:25.780 --> 00:04:34.730
So I can say style.width.px which is just
an inline style definition wrapped in brackets

48
00:04:34.730 --> 00:04:42.510
in order to make it data bound is equal to
the property we defined called imageWidth.

49
00:04:42.510 --> 00:04:48.700
Lets now save this file and on refresh we
should see a new row with the book properties

50
00:04:48.700 --> 00:04:54.570
we defined as well as our image a little bit
smaller then the others since we specified

51
00:04:54.570 --> 00:04:57.100
it to be only be 100 pixels in width.