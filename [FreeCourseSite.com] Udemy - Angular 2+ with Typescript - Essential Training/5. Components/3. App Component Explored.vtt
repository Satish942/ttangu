WEBVTT
Kind: captions
Language: en

00:00:00.149 --> 00:00:05.650
To get you familiar using components, lets
reconstruct our AppComponent making a few

00:00:05.650 --> 00:00:06.650
changes.

00:00:06.650 --> 00:00:13.780
I’m going to start out by removing the code
currently in our AppComponent file.

00:00:13.780 --> 00:00:18.920
The first thing I’ll do is define my class
and name it AppComponent.

00:00:18.920 --> 00:00:25.429
I want to export this file to make sure other
files can use our component.

00:00:25.429 --> 00:00:32.360
We’ll declare a property within our class
and name it pageTitle followed by a colon

00:00:32.360 --> 00:00:35.230
and then the data type of string.

00:00:35.230 --> 00:00:40.750
Then we can define a default value which will
be Dev Book Store.

00:00:40.750 --> 00:00:46.420
Next lets go ahead and define a component
decorator above the class.

00:00:46.420 --> 00:00:50.850
We always begins with an @ sign then the name
of the decorator.

00:00:50.850 --> 00:00:55.190
The component decorator is a function so we
type parenthesis.

00:00:55.190 --> 00:00:59.760
And we’re going to pass in an object so
we add curly braces.

00:00:59.760 --> 00:01:03.490
notice we are getting an underline error here.

00:01:03.490 --> 00:01:09.000
And the reason is because we need to import
Component from angular core.

00:01:09.000 --> 00:01:17.310
So we’ll say import and then we want Component
and we’re getting this from angular core.

00:01:17.310 --> 00:01:21.190
Now the error goes away and we can complete
the metadata.

00:01:21.190 --> 00:01:25.950
So within our component meta data we first
need to add a selector to provide the name

00:01:25.950 --> 00:01:29.780
for a directive when used in the html.

00:01:29.780 --> 00:01:35.070
The current convention is to prefix the selector
with something to identify as part of our

00:01:35.070 --> 00:01:36.070
application.

00:01:36.070 --> 00:01:39.510
So we’ll use bs for book store.

00:01:39.510 --> 00:01:44.780
the second part of the name represents the
component name, so we use app.

00:01:44.780 --> 00:01:46.520
Next we’ll define the template.

00:01:46.520 --> 00:01:52.560
And when defining a template we can either
reference another file or put in any valid

00:01:52.560 --> 00:01:54.280
html code.

00:01:54.280 --> 00:01:59.560
In this case, we’ll add some HTML directly
in the template area.

00:01:59.560 --> 00:02:02.720
We can use single or double quotes.

00:02:02.720 --> 00:02:05.780
Or we can also use back ticks.

00:02:05.780 --> 00:02:11.109
Backticks are located at the top left of your
keyboard and they are needed if you are spreading

00:02:11.109 --> 00:02:14.830
out the code on more then one line.

00:02:14.830 --> 00:02:21.319
We can use angular data binding here to display
our pageTitle property defined below.

00:02:21.319 --> 00:02:26.459
To do this we just add the name of our property
inside of curly brackets.

00:02:26.459 --> 00:02:31.810
Then also add in another line with the text
App Component Test

00:02:31.810 --> 00:02:35.389
And that’s it, you’ve now created your
first component.

00:02:35.389 --> 00:02:38.329
But how do we use it?

00:02:38.329 --> 00:02:52.260
All we need to do is add the selector we created
called bs-app into our index.html file.

00:02:52.260 --> 00:03:04.650
Once we’ve done that, we can go back to
our terminal and restart our application.

00:03:04.650 --> 00:03:10.090
And now we have successfully bootstrapped
Angular and are displaying our first component,

00:03:10.090 --> 00:03:10.629
pretty sweet.

